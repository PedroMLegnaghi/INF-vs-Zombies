ESTRUTURACAO DAS PASTAS:
/INFVsZombies
│
├── root(raiz, nao é uma pasta) -> fica os arquivos ".c" 
├── include/        → Headers .h (separados)
├── resources/      → Imagens, áudios, fontes
├── output/         → game.exe e objetos .o
├── Makefile
└── .vscode/
==============================================================================
==============================================================================
//BASICO
TELA INICIAL:
****canto inferior esquerdo botão de exit
	*Imagem de fundo(videozinho que nem no PVSZ normal?)
	*Pede o nome e gênero (gênero e nome para depois usar tipo "bem vindo capitã(o) 				nome")
	*Dificuldade?(fácil, media e difícil?)

	*Escolha de deck de plantas?(lista de structs plantas disponíveis)
		@struct planta(nome, custo, desing(img),som?,cooldown)
		 	->& existe a planta empty de custo zero e imagem de grama, sem som e sem cooldown?
		
	*COMECAR

JOGO:
	*img do gramado, cada gramado é um lugar do array (que ocupa uma proporção) de  	plantas
		@definir proporção, os zombies andam 1 espaço de array
			, meu array tem 10000 espaços, a planta ocupa 50 espaços, com isso
			o zombie consegue andar passos menores, não vai chegar em um segundo
		@if array[i] ==0, então coloco a planta
	*quando zombie chega na posicao zero ("final") o jogo emite uma imagem
	de "voce perdeu" e acabou, volta para o menu de escolhar de planta
	*esc = menu?
		@sair?
		@mutar o som?
	*estrutura zombie, pode ter varios estilos escolhidos aleatoriamente
		@criar um array de estilos(png) e fazer um rand para escolher o 
		   estilo do zombie.
		@zombie: estilo(png?), vida, velocidade?(espacosdoarray/s(frame?), som?
	*quando ele chega na planta e comeca a atacar, determinar quanto dano por frame?)
	*pá para tirar as plantas?(atualiza array de plantas, colocando empty)

	Rectangle gramado[9*5]={0}
	posxInicial = (800-35*2(margin left-right))/9;
	posyInicial = 40+(450-(20+40)(margin left-right))/5;
	width = posxInicial;
	height = posyInicial;
	for(int...) { 
		gramado[i].x= posxInicial+posxInicial*i;
		gramado[i].y=...
		...
		...
	}
	for(int i)
	{
		//INTERCALAR CORES
		if(i&1){
		draw(gramado[i],LIGHTGREEN)
		}else{
			draw(gramado[i],DARKGREEN)
		}
		if(isHoveredBy){
		drawLine(gramadoi, BLACK)
		}

	}
	9colunas
	const int screenWidth = (800-35*2(margin left-right))/9;
	5linhas
    const int screenHeight = (450-20*2(margin left-right))/5;

==============================================================================
==============================================================================
sol
const unsigned int tempoParaNascerNaturalmente = 10seg(em funcao dos frames=(framesPSeg*10/frameCount))
struct sol{
	Circle circle yellow
	png?
	sound?
	value = 50;
	
}
enum TypeOfPlants{
	sunflower,
	paenutThrower,
	saladThrower,
	...
}
enum CostOfPlants{
	//precicsa ser da mesma ordem do tipo da planta!

	sunflower = 50,
	peanutsThrower = 100,
}
planta
struct plant{
	Rectangle rectangle (que vai ser a planta)
	png?
	som?
	TypeOfPlants type
	int custo
}
ai eu vou ter as structs das plantas especificas
	struct sunflower{
		plant sunflower{
			Rectangle rectangle (que vai ser a planta)
			png?
			som?
			custo
		}
	}
	
	Funcao (sol)gerarSolSunflower(int tempoGeracaoSol, sunflower girassol)
